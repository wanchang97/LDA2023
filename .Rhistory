Hc.NA.percentage = Hc.NA/dim(trenal.long.unique)[1]
missing <- data.frame(rbind(Hc.NA,Hc.NA.percentage))
kable(missing, caption= "Missing data for each measurement",
col.names =colnames(trenal.wide[c(1:12)]),digits = 3)
plot(Hc.NA.percentage,xaxt="n",xlab ="j",ylab="Missing data%")
axis(side=1,at=c(1,2,3,4,5,6,7,8,9,10,11,12),labels=colnames(trenal.wide)[1:12])
trenal.long.NA = trenal.long[is.na(trenal.long$Hc),]
#t = unique(trenal.long.NA$id) # 821 individuals
trenal.long.NA.unique <- trenal.long.NA[match( unique(trenal.long.NA$id), trenal.long.NA$id),]
summary(trenal.long.NA.unique)
## Conclusion, For the missing data, we can see that
#png(file="MissingValueAnalysis.png",
#    width=600, height=1200)
par(mfrow=c(4,2))
## age
hist(trenal.long.unique$age,title="Age distribution in original data")
hist(trenal.long.NA.unique$age,col="red",title="Age distribution in missing data")
## male
plot(trenal.long.unique$male)
title(main="Gender distribution in original data")
plot(trenal.long.NA.unique$male,col="red")
title(main="Gender distribution in missing data")
## cardio
plot(trenal.long.unique$cardio)
title(main="Cardio distribution in original data")
plot(trenal.long.NA.unique$cardio,col="red")
title(main="Cardio distribution in missing data")
## reject
#hist(as.numeric(trenal.long.NA.unique$reject),freq=FALSE,main="Histogram Plot for reject",xaxt="n")
#axis(side=1,at=c(0,1),labels=c("not reject","reject"))
plot(trenal.long.unique$reject)
title(main="Reject distribution in original data")
plot(trenal.long.NA.unique$reject,col="red")
title(main="Reject distribution in missing data")
#dev.off()
hist(trenal.long$HC,title="HC distribution in original data")
# This is my question on long table and wide table transform:
library(readxl)
trenal <- read_excel("Trenal.XLS") # summary(trenal)
trenal= trenal[,-18] #remove a noninformative column const
# Continuous or discrete variables
trenal$id = as.factor(trenal$id)
trenal$j = as.factor(trenal$j)
trenal$time = as.factor(trenal$time)
trenal$male = as.factor(trenal$male)
trenal$cardio = as.factor(trenal$cardio)
trenal$reject = as.factor(trenal$reject)
# Change the name of respons
colnames(trenal)[19] <- "HC"
trenal.long = trenal[,13:20] # long table form
# Remove j
trenal.long = trenal.long[,-6]
trenal.long.unique <- trenal.long[match( unique(trenal.long$id), trenal.long$id),]
trenal.long.noNA <- na.omit(trenal.long)# reordered
# Wide table form?
trenal.wide = as.data.frame(subset(trenal,trenal$j=="1"))[,1:18] # 1160 x 18
# Analyse the NA values descriptively
## First to collect how many NAs are in HC0, Hc0.5, Hc1, ..., Hc 10
Hc.NA = numeric(12)
for (i in c(1:12)) {
Hc.NA[i] = sum(is.na(trenal.wide[,i]))
}
# 1   0   1  87 205 314 418 508 595 672 749 812
# The number of missing data / the ideal case have all meassurements for everyone
missingdata.percentage = Hc.NA/1160
plot(missingdata.percentage,xaxt="n",xlab ="j",ylab="Missing data%")
axis(side=1,at=c(1,2,3,4,5,6,7,8,9,10,11,12),labels=colnames(trenal.wide)[1:12])
# Conclusion could be at the first three measurements, there are almost full data
# More people tends to miss the measurements when time increases
##Second  We can extract all NA data from the long table to analyse their construction
trenal.long.NA = trenal.long[is.na(trenal.long$HC),]
#t = unique(trenal.long.NA$id) # 821 individuals
trenal.long.NA.unique <- trenal.long.NA[match( unique(trenal.long.NA$id), trenal.long.NA$id),]
summary(trenal.long.NA.unique)
## Conclusion, For the missing data, we can see that
png(file="MissingValueAnalysis.png",
width=600, height=1200)
par(mfrow=c(4,2))
## age
hist(trenal.long.unique$age,title="Age distribution in original data")
hist(trenal.long.NA.unique$age,col="red",title="Age distribution in missing data")
## male
plot(trenal.long.unique$male)
title(main="Gender distribution in original data")
plot(trenal.long.NA.unique$male,col="red")
title(main="Gender distribution in missing data")
## cardio
plot(trenal.long.unique$cardio)
title(main="Cardio distribution in original data")
plot(trenal.long.NA.unique$cardio,col="red")
title(main="Cardio distribution in missing data")
## reject
#hist(as.numeric(trenal.long.NA.unique$reject),freq=FALSE,main="Histogram Plot for reject",xaxt="n")
#axis(side=1,at=c(0,1),labels=c("not reject","reject"))
plot(trenal.long.unique$reject)
title(main="Reject distribution in original data")
plot(trenal.long.NA.unique$reject,col="red")
title(main="Reject distribution in missing data")
dev.off()
# Data exploration before fitting models
# Univariate summaries
# Plot histogram of the continuous variables
hist(trenal.long$HC,title="HC distribution in original data")
# Bivariate summaries
library(ggplot2)
library(GGally)
gg <- ggpairs(data=trenal.long.unique[,2:7])
gg
# Relationships between categorical variables and continuous variables can be illustrated with
# side-by-side boxplots or stacked histograms
# These observed trends can be supported with summary statistics generated by subgroup
# The diagonal illustrates the distribution of each variable
# using density curves for continuous variables and a var chart for categorical variable.
# Data exploration before fitting models
# Univariate summaries
# Plot histogram of the continuous variables
hist(trenal.long$HC,title="HC distribution in original data")
trenal.long$HC
trenal.long$Hc
trenal.long
# This is my question on long table and wide table transform:
library(readxl)
trenal <- read_excel("Trenal.XLS") # summary(trenal)
trenal= trenal[,-18] #remove a noninformative column const
# Continuous or discrete variables
trenal$id = as.factor(trenal$id)
trenal$j = as.factor(trenal$j)
trenal$time = as.factor(trenal$time)
trenal$male = as.factor(trenal$male)
trenal$cardio = as.factor(trenal$cardio)
trenal$reject = as.factor(trenal$reject)
# Change the name of respons
colnames(trenal)[19] <- "HC"
trenal.long = trenal[,13:20] # long table form
# Remove j
trenal.long = trenal.long[,-6]
trenal.long.unique <- trenal.long[match( unique(trenal.long$id), trenal.long$id),]
trenal.long.noNA <- na.omit(trenal.long)# reordered
# Wide table form?
trenal.wide = as.data.frame(subset(trenal,trenal$j=="1"))[,1:18] # 1160 x 18
# Analyse the NA values descriptively
## First to collect how many NAs are in HC0, Hc0.5, Hc1, ..., Hc 10
Hc.NA = numeric(12)
for (i in c(1:12)) {
Hc.NA[i] = sum(is.na(trenal.wide[,i]))
}
# 1   0   1  87 205 314 418 508 595 672 749 812
# The number of missing data / the ideal case have all meassurements for everyone
missingdata.percentage = Hc.NA/1160
plot(missingdata.percentage,xaxt="n",xlab ="j",ylab="Missing data%")
axis(side=1,at=c(1,2,3,4,5,6,7,8,9,10,11,12),labels=colnames(trenal.wide)[1:12])
# Conclusion could be at the first three measurements, there are almost full data
# More people tends to miss the measurements when time increases
##Second  We can extract all NA data from the long table to analyse their construction
trenal.long.NA = trenal.long[is.na(trenal.long$HC),]
#t = unique(trenal.long.NA$id) # 821 individuals
trenal.long.NA.unique <- trenal.long.NA[match( unique(trenal.long.NA$id), trenal.long.NA$id),]
summary(trenal.long.NA.unique)
## Conclusion, For the missing data, we can see that
png(file="MissingValueAnalysis.png",
width=600, height=1200)
par(mfrow=c(4,2))
## age
hist(trenal.long.unique$age,title="Age distribution in original data")
hist(trenal.long.NA.unique$age,col="red",title="Age distribution in missing data")
## male
plot(trenal.long.unique$male)
title(main="Gender distribution in original data")
plot(trenal.long.NA.unique$male,col="red")
title(main="Gender distribution in missing data")
## cardio
plot(trenal.long.unique$cardio)
title(main="Cardio distribution in original data")
plot(trenal.long.NA.unique$cardio,col="red")
title(main="Cardio distribution in missing data")
## reject
#hist(as.numeric(trenal.long.NA.unique$reject),freq=FALSE,main="Histogram Plot for reject",xaxt="n")
#axis(side=1,at=c(0,1),labels=c("not reject","reject"))
plot(trenal.long.unique$reject)
title(main="Reject distribution in original data")
plot(trenal.long.NA.unique$reject,col="red")
title(main="Reject distribution in missing data")
dev.off()
# Data exploration before fitting models
# Univariate summaries
# Plot histogram of the continuous variables
hist(trenal.long$HC,title="HC distribution in original data")
# Bivariate summaries
library(ggplot2)
library(GGally)
gg <- ggpairs(data=trenal.long.unique[,2:7])
gg
# Relationships between categorical variables and continuous variables can be illustrated with
# side-by-side boxplots or stacked histograms
# These observed trends can be supported with summary statistics generated by subgroup
# The diagonal illustrates the distribution of each variable
# using density curves for continuous variables and a var chart for categorical variable.
library(readxl)
trenal <- read_excel("Trenal.XLS") # summary(trenal)
trenal= trenal[,-18] #remove a noninformative column const
# Continuous or discrete variables
trenal$id = as.factor(trenal$id)
trenal$j = as.factor(trenal$j)
trenal$time = as.factor(trenal$time)
trenal$male = as.factor(trenal$male)
trenal$cardio = as.factor(trenal$cardio)
trenal$reject = as.factor(trenal$reject)
# Change the name of respons
colnames(trenal)[19] <- "HC"
trenal.long = trenal[,13:20]
trenal <- read_excel("Trenal.XLS") # summary(trenal)
trenal= trenal[,-18] #remove a noninformative column const
# This is my question on long table and wide table transform:
library(readxl)
trenal <- read_excel("Trenal.XLS") # summary(trenal)
setwd("C:/GIthub/LDA2023/LDA2023")
# This is my question on long table and wide table transform:
library(readxl)
trenal <- read_excel("Trenal.XLS") # summary(trenal)
trenal= trenal[,-18] #remove a noninformative column const
# Continuous or discrete variables
trenal$id = as.factor(trenal$id)
trenal$j = as.factor(trenal$j)
trenal$time = as.factor(trenal$time)
trenal$male = as.factor(trenal$male)
trenal$cardio = as.factor(trenal$cardio)
trenal$reject = as.factor(trenal$reject)
# Change the name of respons
colnames(trenal)[19] <- "HC"
trenal.long = trenal[,13:20] # long table form
# Remove j
trenal.long = trenal.long[,-6]
trenal.long.unique <- trenal.long[match( unique(trenal.long$id), trenal.long$id),]
trenal.long.noNA <- na.omit(trenal.long)# reordered
# Wide table form?
trenal.wide = as.data.frame(subset(trenal,trenal$j=="1"))[,1:18] # 1160 x 18
# Analyse the NA values descriptively
## First to collect how many NAs are in HC0, Hc0.5, Hc1, ..., Hc 10
Hc.NA = numeric(12)
for (i in c(1:12)) {
Hc.NA[i] = sum(is.na(trenal.wide[,i]))
}
# 1   0   1  87 205 314 418 508 595 672 749 812
# The number of missing data / the ideal case have all meassurements for everyone
missingdata.percentage = Hc.NA/1160
plot(missingdata.percentage,xaxt="n",xlab ="j",ylab="Missing data%")
axis(side=1,at=c(1,2,3,4,5,6,7,8,9,10,11,12),labels=colnames(trenal.wide)[1:12])
##Second  We can extract all NA data from the long table to analyse their construction
trenal.long.NA = trenal.long[is.na(trenal.long$HC),]
#t = unique(trenal.long.NA$id) # 821 individuals
trenal.long.NA.unique <- trenal.long.NA[match( unique(trenal.long.NA$id), trenal.long.NA$id),]
summary(trenal.long.NA.unique)
## Conclusion, For the missing data, we can see that
png(file="MissingValueAnalysis.png",
width=600, height=1200)
par(mfrow=c(4,2))
## age
hist(trenal.long.unique$age,title="Age distribution in original data")
hist(trenal.long.NA.unique$age,col="red",title="Age distribution in missing data")
## male
plot(trenal.long.unique$male)
title(main="Gender distribution in original data")
plot(trenal.long.NA.unique$male,col="red")
title(main="Gender distribution in missing data")
## cardio
plot(trenal.long.unique$cardio)
title(main="Cardio distribution in original data")
plot(trenal.long.NA.unique$cardio,col="red")
title(main="Cardio distribution in missing data")
## reject
#hist(as.numeric(trenal.long.NA.unique$reject),freq=FALSE,main="Histogram Plot for reject",xaxt="n")
#axis(side=1,at=c(0,1),labels=c("not reject","reject"))
plot(trenal.long.unique$reject)
title(main="Reject distribution in original data")
plot(trenal.long.NA.unique$reject,col="red")
title(main="Reject distribution in missing data")
dev.off()
# Data exploration before fitting models
# Univariate summaries
# Plot histogram of the continuous variables
hist(trenal.long$HC,title="HC distribution in original data")
# Bivariate summaries
library(ggplot2)
library(GGally)
gg <- ggpairs(data=trenal.long.unique[,2:7])
gg
hist(trenal.long$HC,title="HC distribution in original data")
# Bivariate summaries
library(ggplot2)
library(GGally)
gg <- ggpairs(data=trenal.long.unique[,2:7])
gg
hist(trenal.long$HC,title="HC distribution in original data")
hist(trenal.long$time,title="HC distribution in original data")
hist(trenal.long$age,title="age distribution in original data")
# Bivariate summaries
library(ggplot2)
library(GGally)
gg <- ggpairs(data=trenal.long.unique[,2:7])
gg
# Bivariate summaries
library(ggplot2)
library(GGally)
gg <- ggpairs(data=trenal.long.unique[,2:5])
gg
# Bivariate summaries
library(ggplot2)
library(GGally)
gg <- ggpairs(data=trenal.long.unique[,2:6])
gg
hist(trenal.long.unique$age,title="age distribution in original data")
library(ggplot2)
# To view the mean structure of the HC for all individuals
ggplot(trenal.long.noNA,aes(x=as.factor(time),y=HC,group=id))  + geom_line(col="grey")+stat_summary(aes(group=1),geom="line",fun=mean,linewidth=2)+
labs(title="Line plot of HC level for all individuals overtime and the mean structure")
# To view to variance structure
ggplot(data.long.noNA,aes(x=as.factor(time),y=HC))+
geom_boxplot(position=position_dodge(1))+
labs(title="Box Plot of HC level for all indivuduals over time and the variance structure")
# To view to variance structure
ggplot(trenal.long.noNA,aes(x=as.factor(time),y=HC))+
geom_boxplot(position=position_dodge(1))+
labs(title="Box Plot of HC level for all indivuduals over time and the variance structure")
HcCorr = trenal.wide[,c(1:12)]
cor(HcCorr,use="complete.obs" ) # also COV for covariance
library("PerformanceAnalytics")
chart.Correlation(HcCorr,historgram=TRUE)
knitr::opts_chunk$set(echo = TRUE,warning=FALSE,message=FALSE)
ggplot(data.selected,aes(x=time,y=HC,group=id,color=id))+geom_point()+ geom_line()+theme_light()
# since the data dimension is large 9551 x 8, we can select random 30 data to have a look
set.seed(1)
selected <- sample(1:length(unique(trenal.long.noNA$id)),30,replace=T) # random samples and permutations
#selected.vector = as.vector(selected)
data.selected = trenal.long.noNA[(trenal.long.noNA$id %in% c(selected)), ]
ggplot(data.selected,aes(x=time,y=HC,group=id,color=id))+geom_point()+ geom_line()+theme_light()
ggplot(data.selected,aes(x=time,y=HC,group=id,color=age))+geom_point()+ geom_line()+theme_light()
ggplot(trenal.long.noNA,aes(x=time,y=HC,group=id,color=age))+geom_point()+ geom_line()+theme_light()
ggplot(data.selected,aes(x=time,y=HC,group=id,color=male)) +geom_point()+ geom_line()+theme_light()
# since the data dimension is large 9551 x 8, we can select random 30 data to have a look
set.seed(1)
selected <- sample(1:length(unique(trenal.long.noNA$id)),30,replace=T) # random samples and permutations
#selected.vector = as.vector(selected)
data.selected = trenal.long.noNA[(trenal.long.noNA$id %in% c(selected)), ]
knitr::opts_chunk$set(echo = TRUE,warning=FALSE,message=FALSE)
library(readxl)
library(knitr)
trenal <- read_excel("Trenal.XLS") # summary(trenal)
trenal= trenal[,-18] #remove a noninformative column const
# Continuous or discrete variables
trenal$id = as.factor(trenal$id)
trenal$j = as.factor(trenal$j)
#trenal$time = as.factor(trenal$time)
trenal$male = as.factor(trenal$male)
trenal$cardio = as.factor(trenal$cardio)
trenal$reject = as.factor(trenal$reject)
# Change the name of respons
colnames(trenal)[19] <- "Hc"
trenal.long = trenal[,13:20] # long table form
# Remove j
trenal.long = trenal.long[,-6]
trenal.long.unique <- trenal.long[match( unique(trenal.long$id), trenal.long$id),]# meanHC should replace trenal.long.unique$HC
trenal.long.noNA <- na.omit(trenal.long)
# Wide table form
trenal.wide = as.data.frame(subset(trenal,trenal$j=="1"))[,1:18] # 1160 x 18
# Analyse the NA values descriptively
## First to collect how many NAs are in Hc0, Hc0.5, Hc1, ..., Hc 10
Hc.NA = numeric(12)
for (i in c(1:12)) {
Hc.NA[i] = sum(is.na(trenal.wide[,i]))
}
# 1   0   1  87 205 314 418 508 595 672 749 812
# The number of missing data / the ideal case have all meassurements for everyone
Hc.NA.percentage = Hc.NA/dim(trenal.long.unique)[1]
missing <- data.frame(rbind(Hc.NA,Hc.NA.percentage))
kable(missing, caption= "Missing data for each measurement",
col.names =colnames(trenal.wide[c(1:12)]),digits = 3)
plot(Hc.NA.percentage,xaxt="n",xlab ="j",ylab="Missing data%")
axis(side=1,at=c(1,2,3,4,5,6,7,8,9,10,11,12),labels=colnames(trenal.wide)[1:12])
trenal.long.NA = trenal.long[is.na(trenal.long$Hc),]
#t = unique(trenal.long.NA$id) # 821 individuals
trenal.long.NA.unique <- trenal.long.NA[match( unique(trenal.long.NA$id), trenal.long.NA$id),]
summary(trenal.long.NA.unique)
## Conclusion, For the missing data, we can see that
png(file="MissingValueAnalysis.png",
width=600, height=1200)
plot.new()
par(mfrow=c(4,2))
## age
hist(trenal.long.unique$age,title="Age distribution in original data")
hist(trenal.long.NA.unique$age,col="red",title="Age distribution in missing data")
## male
plot(trenal.long.unique$male)
title(main="Gender distribution in original data")
plot(trenal.long.NA.unique$male,col="red")
title(main="Gender distribution in missing data")
## cardio
plot(trenal.long.unique$cardio)
title(main="Cardio distribution in original data")
plot(trenal.long.NA.unique$cardio,col="red")
title(main="Cardio distribution in missing data")
## reject
#hist(as.numeric(trenal.long.NA.unique$reject),freq=FALSE,main="Histogram Plot for reject",xaxt="n")
#axis(side=1,at=c(0,1),labels=c("not reject","reject"))
plot(trenal.long.unique$reject)
title(main="Reject distribution in original data")
plot(trenal.long.NA.unique$reject,col="red")
title(main="Reject distribution in missing data")
dev.off()
## Conclusion, For the missing data, we can see that
png(file="MissingValueAnalysis.png",
width=600, height=1200)
plot.new()
par(mfrow=c(4,2))
## age
hist(trenal.long.unique$age,title="Age distribution in original data")
hist(trenal.long.NA.unique$age,col="red",title="Age distribution in missing data")
## male
plot(trenal.long.unique$male)
title(main="Gender distribution in original data")
plot(trenal.long.NA.unique$male,col="red")
title(main="Gender distribution in missing data")
## cardio
plot(trenal.long.unique$cardio)
title(main="Cardio distribution in original data")
plot(trenal.long.NA.unique$cardio,col="red")
title(main="Cardio distribution in missing data")
## reject
#hist(as.numeric(trenal.long.NA.unique$reject),freq=FALSE,main="Histogram Plot for reject",xaxt="n")
#axis(side=1,at=c(0,1),labels=c("not reject","reject"))
plot(trenal.long.unique$reject)
title(main="Reject distribution in original data")
plot(trenal.long.NA.unique$reject,col="red")
title(main="Reject distribution in missing data")
dev.off()
hist(trenal.long$HC,title="HC distribution in original data")
trenal.long
hist(trenal.long$Hc,title="HC distribution in original data")
hist(trenal.long$Hc,title="Hc distribution in original data")
hist(trenal.long$Hc,title="Hc distribution in original data")
# Box plot by sex
ggplot(trenal.long.noNA,aes(x=time,y=HC,fill=as.factor(male)))+
geom_boxplot(position=position_dodge(1))
knitr::opts_chunk$set(echo = TRUE,warning=FALSE,message=FALSE)
library(ggplot2)
library(dplyr)
library(knitr)
# NA related to gender?
trenal.wide.male = trenal.wide[trenal.wide$male == 1,]
trenal.long.male = trenal.long[(trenal.long$male == 1)&(trenal.long$time == 0),]
male.NA = sum(is.na(trenal.long.male$HC))
male.number = dim(trenal.wide.male)[1]
male.NA.ratio = male.NA/male.number
trenal.wide.female = trenal.wide[trenal.wide$male == 0,]
female.NA = sum(is.na(trenal.wide.female$HC))
female.number = dim(trenal.wide[trenal.wide$male== 0,])[1]
female.NA.ratio = female.NA/female.number
#boxplot(c(male.NA.ratio,female.NA.ratio),c(1,0))
# NA related to cardio?
trenal.wide.cardio = trenal.wide[trenal.wide$cardio == 1,]
cardio.1.NA = sum(is.na(trenal.wide.cardio$HC))
cardio.1.number = dim(trenal.wide[trenal.wide$cardio== 1,])[1]
cardio.1.NA.ratio = cardio.1.NA/cardio.1.number
trenal.wide.cardio = trenal.wide[trenal.wide$cardio == 0,]
cardio.0.NA = sum(is.na(trenal.wide.cardio$HC))
cardio.0.number = dim(trenal.wide[trenal.wide$cardio== 0,])[1]
cardio.0.NA.ratio = cardio.0.NA/cardio.0.number
library(readxl)
trenal <- read_excel("Trenal.XLS") # summary(trenal)
trenal= trenal[,-18] #remove a noninformative column const
# Continuous or discrete variables
trenal$id = as.factor(trenal$id)
trenal$j = as.factor(trenal$j)
trenal$time = as.factor(trenal$time)
trenal$male = as.factor(trenal$male)
trenal$cardio = as.factor(trenal$cardio)
trenal$reject = as.factor(trenal$reject)
# Change the name of respons
colnames(trenal)[19] <- "HC"
trenal.long = trenal[,13:20] # long table form
# Remove j
trenal.long = trenal.long[,-6]
trenal.long.noNA <- na.omit(trenal.long)# reordered
trenal.wide = as.data.frame(subset(trenal,trenal$j=="1"))[,1:18]
summary(trenal.wide)
library(magrittr) # needs to be run every time you start R and want to use %>%
library(dplyr)
trenal.long <- trenal.long %>% # reordered long table
relocate(id) %>%
relocate(time,.after = id)%>%
relocate(HC,.after=time)
#summary(trenal.long)
sum(!is.na(trenal.long$HC))
trenal.long.noNA <- na.omit(trenal.long)# reordered long table without NAs
summary(trenal.long.noNA)
data_summary_long = data.frame(unclass(summary(trenal.long.noNA,maxsum=1160)),check.names=FALSE)
trenal.long.noNA$id[length(trenal.long.noNA$id)]
#library(magrittr) # needs to be run every time you start R and want to use %>%
library(dplyr)
trenal.long <- trenal.long %>% # reordered long table
relocate(id) %>%
relocate(time,.after = id)%>%
relocate(HC,.after=time)
#summary(trenal.long)
sum(!is.na(trenal.long$HC))
trenal.long.noNA <- na.omit(trenal.long)# reordered long table without NAs
summary(trenal.long.noNA)
data_summary_long = data.frame(unclass(summary(trenal.long.noNA,maxsum=1160)),check.names=FALSE)
trenal.long.noNA$id[length(trenal.long.noNA$id)]
# model b
model.b <- lmer(HC ~ time + (time|id),REML=T,data= trenal.long)
-0.21*3.47*0.433
drop_in_dev <- anova(model.b.piecewise.age,model.b.piecewise.maleage,model.b.piecewise2.maleage,test="Chisq")
